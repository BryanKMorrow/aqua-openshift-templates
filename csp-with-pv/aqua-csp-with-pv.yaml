--- 
apiVersion: v1
kind: Template
labels: 
  app: aqua-security
  template: aqua-security-template
message: "The following service(s) have been created in your project, Aqua Web Console, Database and Aqua Gateway"
metadata: 
  annotations: 
    description: "Template to deploy Aqua Web Console, Aqua Gateway and Database"
    openshift.io/display-name: "Aqua Security CSP"
    openshift.io/documentation-url: "https://docs.aquasec.com"
    openshift.io/long-description: "This template creates objects that deploy the Aqua Security CSP."
    openshift.io/provider-display-name: "Aqua Security"
    openshift.io/support-url: "https://support.aquasec.com"
    tenplate.openshift.io/expose-uri: "http://{.spec.host}{.spec.path}"
    tags: integration,aqua
    lastModified: "July 30th, 2019"
  labels: 
    application: aquasec
    createdBy: BryanKMorrow
  name: aqua-security
objects: 
  -
    apiVersion: v1
    kind: Secret
    metadata:
      name: postgres-password
      namespace: aqua-security
    type: Opaque
    stringData:
      password: "${DB_PASSWORD}"
  -
    apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: aquadb-pv
      namespace: aqua-security
      labels:
        app: aqua-security
    spec:
      storageClassName: local-storage
      capacity:
        storage: 5Gi
      accessModes:
        - ReadWriteMany
      persistentVolumeReclaimPolicy: Recycle
      hostPath:
        path: "/var/lib/aquadata/"
  -
    kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: aquadb-pvc
      namespace: aqua-security
    spec:
      storageClassName: local-storage
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: 3Gi
      volumeName: aquadb-pv
      selector:
        matchLabels:
          app: aqua-security
  -
    apiVersion: v1
    kind: Service
    metadata:
      name: aqua-gateway
      labels:
        app: aqua-gateway
    spec:
      ports:
        - port: 3622
          protocol: TCP
          targetPort: 3622
      selector:
        app: aqua-gateway
      type: LoadBalancer
  -
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: aqua-gateway
    spec:
      template:
        metadata:
          labels:
            app: aqua-gateway
          name: aqua-gateway
        spec:
          serviceAccount: ${SERVICE_ACCOUNT}
          imagePullSecrets:
            - name: aqua-registry
          containers:
          - name: aqua-gateway
            image: ${AQUA_REGISTRY}/gateway:${AQUA_TAG}
            securityContext:
              privileged: true
            env:
              - name: SCALOCK_GATEWAY_PUBLIC_IP
                value: aqua-gateway
              - name: SCALOCK_DBUSER
                value: "postgres"
              - name: SCALOCK_DBPASSWORD
                valueFrom:
                  secretKeyRef:
                    key: password
                    name: postgres-password
              - name: SCALOCK_DBNAME
                value: "scalock"
              - name: SCALOCK_DBHOST
                value: aqua-db
              - name: SCALOCK_DBPORT
                value: "5432"
              - name: SCALOCK_AUDIT_DBUSER
                value: "postgres"
              - name: SCALOCK_AUDIT_DBPASSWORD
                valueFrom:
                  secretKeyRef:
                    key: password
                    name: postgres-password
              - name: SCALOCK_AUDIT_DBNAME
                value: "slk_audit"
              - name: SCALOCK_AUDIT_DBHOST
                value: aqua-db
              - name: SCALOCK_AUDIT_DBPORT
                value: "5432"
            ports:
            - containerPort: 3622
            readinessProbe:
              failureThreshold: 3
              initialDelaySeconds: 10
              periodSeconds: 30
              successThreshold: 1
              tcpSocket:
                port: 3622
              timeoutSeconds: 1
  -
    apiVersion: v1
    kind: Service
    metadata:
      name: aqua-db
      labels:
        app: aqua-db
    spec:
      ports:
        - port: 5432
      selector:
        app: aqua-db
      type: ClusterIP
  -
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: aqua-db
    spec:
      template:
        metadata:
          labels:
            app: aqua-db
          name: aqua-db
        spec:
          serviceAccount: ${SERVICE_ACCOUNT}
          imagePullSecrets:
            - name: aqua-registry
          containers:
          - name: aqua-db
            image: ${AQUA_REGISTRY}/database:${AQUA_TAG}
            securityContext:
              privileged: true
            env:
              - name: postgres-password
                valueFrom:
                  secretKeyRef:
                    key: password
                    name: postgres-password
            volumeMounts:
              - mountPath: /var/lib/postgresql/data
                name: aquadb-data-mount
            ports:
            - containerPort: 5432
            readinessProbe:
              failureThreshold: 3
              initialDelaySeconds: 10
              periodSeconds: 20
              successThreshold: 1
              tcpSocket:
                port: 5432
              timeoutSeconds: 1
          volumes:
            - name: aquadb-data-mount
              persistentVolumeClaim:
                claimName: aquadb-pvc
  -
    apiVersion: v1
    kind: ClusterRole
    metadata:
      annotations:
        openshift.io/description: A user who can search and scan images from an OpenShift integrated registry.
      name: image-scanner
    rules:
    - apiGroups:
      resources:
      - imagestreams
      - imagestreams/layers
      verbs:
      - get
      - list
      - watch
  -
    apiVersion: v1
    kind: ClusterRoleBinding
    metadata:
      name: aqua-scanner-binding
    roleRef:
      name: image-scanner
    subjects:
      - kind: ServiceAccount
        name: aqua
        namespace: aqua-security
  -
    apiVersion: v1
    kind: Route
    metadata:
      name: aqua-web
    spec:
      host: ${ROUTER}
      to:
        kind: Service
        name: aqua-web
  -
    apiVersion: v1
    kind: Service
    metadata:
      name: aqua-web
      labels:
        app: aqua-web
    spec:
      ports:
        - port: 8080
          protocol: TCP
          targetPort: 8080
          name: aqua-web
      selector:
        app: aqua-web
      type: ClusterIP
  -
    apiVersion: v1
    kind: Service
    metadata:
      name: aqua-grpc
      labels:
        app: aqua-web
    spec:
      ports:
        - port: 443
          protocol: TCP
          targetPort: 8443
      selector:
        app: aqua-web
      type: ClusterIP
  -
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: aqua-web
    spec:
      template:
        metadata:
          labels:
            app: aqua-web
          name: aqua-web
        spec:
          serviceAccount: ${SERVICE_ACCOUNT}
          imagePullSecrets:
            - name: aqua-registry
          containers:
          - name: aqua-web
            image: ${AQUA_REGISTRY}/console:${AQUA_TAG}
            securityContext:
              privileged: true
            env:
              - name: SCALOCK_DBUSER
                value: "postgres"
              - name: SCALOCK_DBPASSWORD
                valueFrom:
                  secretKeyRef:
                    key: password
                    name: postgres-password
              - name: SCALOCK_DBNAME
                value: "scalock"
              - name: SCALOCK_DBHOST
                value: aqua-db
              - name: SCALOCK_DBPORT
                value: "5432"
              - name: SCALOCK_AUDIT_DBUSER
                value: "postgres"
              - name: SCALOCK_AUDIT_DBPASSWORD
                valueFrom:
                  secretKeyRef:
                    key: password
                    name: postgres-password
              - name: SCALOCK_AUDIT_DBNAME
                value: "slk_audit"
              - name: SCALOCK_AUDIT_DBHOST
                value: aqua-db
              - name: SCALOCK_AUDIT_DBPORT
                value: "5432"
              - name: AQUA_DOCKERLESS_SCANNING
                value: "${DOCKERLESS}"
              - name: "AQUA_GRPC_MODE"
                value: "${GRPC}"
            volumeMounts:
              - mountPath: /var/run/docker.sock
                name: docker-socket-mount
            ports:
            - containerPort: 8080
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: 8080
                scheme: HTTP
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 1
          volumes:
            - name: docker-socket-mount
              hostPath:
                path: /var/run/docker.sock
parameters: 
  -
    description: "Enter the database password for Aqua Security"
    displayName: DB_PASSWORD
    name: DB_PASSWORD
    required: true
    value: "password"
  -
    description: "Enter the registry for the Aqua images."
    displayName: AQUA_REGISTRY
    name: AQUA_REGISTRY
    required: true
    value: "AQUA_REGISTRY"
  -
    description: "Enter the image tag for the Aqua images."
    displayName: AQUA_TAG
    name: AQUA_TAG
    required: true
    value: "4.2"
  - 
    description: "Enter the service account"
    displayName: SERVICE_ACCOUNT
    name: SERVICE_ACCOUNT
    required: true
    value: "aqua"
  -
    description: "Specify the fully qualified domain name or ip address of the OpenShift node that hosts the OpenShift router."
    displayName: ROUTER
    name: ROUTER
    required: false
    value: 
  -
    description: "Dockerless Scanning (1 is enabled)"
    displayName: DOCKERLESS_SCANNING
    name: DOCKERLESS
    required: true
    value: "0"
  -
    description: "Gateway communication uses GRPC (1 is enabled)"
    displayName: AQUA_GRPC_MODE
    name: GRPC
    required: true
    value: "1"